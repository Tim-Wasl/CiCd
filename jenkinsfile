pipeline {
  agent any

  environment {
    JAVA_HOME = 'C:/Users/wasl/jdk11'
    registry = "timcicd/repository"
    registryCredential = 'dockerhub'
    dockerImage = ''
 } 

  tools {
    jdk 'openjdk-11'
  }

  stages {
    // stage('Build') {
    //   steps {
    //     bat "./gradlew bootrun"
    //   }
    // }
    stage('Quality Check') {
      steps {
        bat './gradlew build'
        recordIssues aggregatingResults: true, enabledForFailure: true, healthy: 5, unhealthy: 7,
          qualityGates: [[threshold: 15, type: 'TOTAL', unstable: true]],            
            tools: [checkStyle(pattern: 'build/reports/checkstyle/main.xml')]
      }
    }
    stage('Sonarqube') {
    environment {
        scannerHome = tool 'sonar'
    }
    steps {
        withSonarQubeEnv('qube') {
            bat "./gradlew test jacocoTestReport"
            bat "./gradlew build sonarqube -Dsonar.projectKey=test"
            jacoco classPattern: "build/classes", sourcePattern: "src/main/java"
           publishCoverage adapters: [jacocoAdapter('build/reports/jacoco/test/jacocoTestReport.xml')]
        }
    }
}
 stage("Quality Gate") {
            steps {
                timeout(time: 20, unit: 'MINUTES') {
                    // Parameter indicates whether to set pipeline to UNSTABLE if Quality Gate fails
                    // true = set pipeline to UNSTABLE, false = don't
                    waitForQualityGate abortPipeline: true
                }
            }
        }
  }

  stage("Pack") {
      steps{
        script {
          dockerImage = docker.build registry + ":$BUILD_NUMBER"
        }
      }
  }
 stage('Deploy Image') {
      steps{
         script {
            docker.withRegistry( '', registryCredential ) {
            dockerImage.push()
          }
        }
      }
    }
}