pipeline {
  agent any

  environment {
    JAVA_HOME = 'C:/Users/wasl/jdk11'
 } 

  tools {
    jdk 'openjdk-11'
  }

  stages {
    stage('Build') {
      steps {
        bat "./gradlew bootrun"
      }
    }
    stage('Quality Check') {
      steps {
        bat './gradlew build'
        recordIssues(
        enabledForFailure: true, aggregatingResults: true, 
        tools: [checkStyle(pattern: 'target/checkstyle-result.xml')]
        )
      }
    }
    stage('Sonarqube') {
    environment {
        scannerHome = tool 'sonar'
    }
    steps {
        withSonarQubeEnv('qube') {
            bat "./gradlew build sonarqube -Dsonar.projectKey=test"
        }
    }
}
//  stage("Quality Gate") {
//             steps {
//                 timeout(time: 20, unit: 'MINUTES') {
//                     // Parameter indicates whether to set pipeline to UNSTABLE if Quality Gate fails
//                     // true = set pipeline to UNSTABLE, false = don't
//                     waitForQualityGate abortPipeline: true
//                 }
//             }
//         }
  }
}